//- Mathjax 3
script.
  (() => {
    const loadMathjax = () => {
    //检查window.MathJax是否已存在
      if (!window.MathJax) {
        window.MathJax = {
        //表示使用$或\\(和\\)作为内联数学公式的标记。

          tex: {
            inlineMath: [['$', '$'], ['\\(', '\\)']],
            // 显示标签
            tags: 'ams'
          },

          chtml: {
            scale: 1.1
          },
          options: {
            renderActions: {
              findScript: [10, doc => {
                for (const node of document.querySelectorAll('script[type^="math/tex"]')) {
                  const display = !!node.type.match(/; *mode=display/)
                  const math = new doc.options.MathItem(node.textContent, doc.inputJax[0], display)
                  const text = document.createTextNode('')
                  node.parentNode.replaceChild(text, node)
                  math.start = {node: text, delim: '', n: 0}
                  math.end = {node: text, delim: '', n: 0}
                  doc.math.push(math)
                }
              }, '']
            }
          }
        }
        
        const script = document.createElement('script')
        script.src = '!{url_for(theme.asset.mathjax)}'
        script.id = 'MathJax-script'
        script.async = true

        document.head.appendChild(script)
      } else {
        MathJax.startup.document.state(0)
        MathJax.texReset()
        MathJax.typesetPromise()
      }
    }

    btf.addGlobalFn('encrypt', loadMathjax, 'mathjax')
    window.pjax ? loadMathjax() : window.addEventListener('load', loadMathjax)
  })()